{"version":3,"sources":["webpack:///./src/routes/Admin/containers/AdminContainer.js","webpack:///./src/routes/Admin/modules/admin.js"],"names":["mapDispatchToProps","dispatch","getData","bindActionCreators","mapStateToProps","state","data","admin","connect","GET_DATA","addData","type","payload","initstate","blogReducer","action","console","log","dataSorted","sort","a","b","threadPosts","length","dateMs","reverse"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAGA,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,aAAS,gFAAAC,CAAmB,uDAAnB,EAA4BF,QAA5B;AADJ,GAAP;AAGD;;AAED,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,UAAMD,MAAME,KAAN,CAAYD;AADb,GAAP;AAGD;;AAGD;;;;;;;;;;;;;;AAcA,+DAAe,2EAAAE,CAAQJ,eAAR,EAAyBJ,kBAAzB,EAA6C,kEAA7C,CAAf,E;;;;;;;;;;;;;AChCA;AACA;AACA;AACO,IAAMS,WAAW,UAAjB;;AAGP;AACA;AACA;;;AAIO,SAASC,OAAT,CAAiBJ,IAAjB,EAAuB;AAC5B,SAAO,UAACL,QAAD,EAAc;AACjBA,aAAS;AACPU,YAAMF,QADC;AAEPG,eAASN;AAFF,KAAT;AAID,GALH;AAMD;;AAOD;AACA;AACA;AACA,IAAMO,YAAY;AAChBP,QAAM;AADU,CAAlB;;AAIe,SAASQ,WAAT,GAAgD;AAAA,MAA3BT,KAA2B,uEAAnBQ,SAAmB;AAAA,MAARE,MAAQ;;;AAE7D,UAAQA,OAAOJ,IAAf;AACE,SAAKF,QAAL;AACEO,cAAQC,GAAR,CAAYF,OAAOH,OAAnB;AACA;AACA,UAAMM,aAAaH,OAAOH,OAAP,CAAeO,IAAf,CAAoB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACpD,YAAKA,EAAEC,WAAF,CAAcC,MAAd,GAAuB,CAAxB,IAA+BH,EAAEE,WAAF,CAAcC,MAAd,GAAuB,CAA1D,EAA8D;AAC5D,iBAAOH,EAAEE,WAAF,CAAcF,EAAEE,WAAF,CAAcC,MAAd,GAAuB,CAArC,EAAwCC,MAAxC,GAAiDH,EAAEC,WAAF,CAAcD,EAAEC,WAAF,CAAcC,MAAd,GAAuB,CAArC,EAAwCC,MAAhG;AACD;AACD,YAAKH,EAAEC,WAAF,CAAcC,MAAd,IAAwB,CAAzB,IAAgCH,EAAEE,WAAF,CAAcC,MAAd,GAAuB,CAA3D,EAA+D;AAC7D,iBAAOH,EAAEE,WAAF,CAAcF,EAAEE,WAAF,CAAcC,MAAd,GAAuB,CAArC,EAAwCC,MAAxC,GAAiDH,EAAEG,MAA1D;AACD;AACD,YAAKH,EAAEC,WAAF,CAAcC,MAAd,GAAuB,CAAxB,IAA+BH,EAAEE,WAAF,CAAcC,MAAd,IAAwB,CAA3D,EAA+D;AAC7D,iBAAOH,EAAEI,MAAF,GAAWH,EAAEC,WAAF,CAAcD,EAAEC,WAAF,CAAcC,MAAd,GAAuB,CAArC,EAAwCC,MAA1D;AACD;AACD,YAAKH,EAAEC,WAAF,CAAcC,MAAd,IAAwB,CAAzB,IAAgCH,EAAEE,WAAF,CAAcC,MAAd,IAAwB,CAA5D,EAAgE;AAC9D,iBAAOH,EAAEI,MAAF,GAAWH,EAAEG,MAApB;AACD;AACF,OAbkB,EAahBC,OAbgB,EAAnB;;AAeA,+BACKpB,KADL;AAEEC,cAAMY;AAFR;AAIF;AACE,aAAOb,KAAP;AAxBJ;AA0BD,C","file":"1.js","sourcesContent":["import { connect } from 'react-redux'\r\nimport { addData } from '../modules/admin'\r\nimport { bindActionCreators } from 'redux'\r\nimport MainBoard from '../components/Admin'\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getData: bindActionCreators(addData, dispatch),\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    data: state.admin.data,\r\n  }\r\n}\r\n\r\n\r\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\r\n\r\n    import { createSelector } from 'reselect'\r\n    const counter = (state) => state.counter\r\n    const tripleCount = createSelector(counter, (count) => count * 3)\r\n    const mapStateToProps = (state) => ({\r\n      counter: tripleCount(state)\r\n    })\r\n\r\n    Selectors can compute derived data, allowing Redux to store the minimal possible state.\r\n    Selectors are efficient. A selector is not recomputed unless one of its arguments change.\r\n    Selectors are composable. They can be used as input to other selectors.\r\n    https://github.com/reactjs/reselect    */\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainBoard)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Admin/containers/AdminContainer.js","\r\n// ------------------------------------\r\n// Constants\r\n// ------------------------------------\r\nexport const GET_DATA = 'GET_DATA'\r\n\r\n\r\n// ------------------------------------\r\n// Actions\r\n// ------------------------------------\r\n\r\n\r\n\r\nexport function addData(data) {\r\n  return (dispatch) => {  \r\n      dispatch({\r\n        type: GET_DATA,\r\n        payload: data\r\n      })\r\n    }\r\n}\r\n\r\n\r\n \r\n\r\n\r\n\r\n// ---------------------------------------\r\n// Reducer\r\n// ------------------------------------\r\nconst initstate = {\r\n  data: [],\r\n};\r\n\r\nexport default function blogReducer(state = initstate, action) {\r\n\r\n  switch (action.type) {\r\n    case GET_DATA:\r\n      console.log(action.payload)\r\n      // sort threads by date\r\n      const dataSorted = action.payload.sort(function(a, b) {\r\n        if ((b.threadPosts.length > 0) && (a.threadPosts.length > 0)) {\r\n          return a.threadPosts[a.threadPosts.length - 1].dateMs - b.threadPosts[b.threadPosts.length - 1].dateMs\r\n        }\r\n        if ((b.threadPosts.length == 0) && (a.threadPosts.length > 0)) {\r\n          return a.threadPosts[a.threadPosts.length - 1].dateMs - b.dateMs\r\n        }\r\n        if ((b.threadPosts.length > 0) && (a.threadPosts.length == 0)) {\r\n          return a.dateMs - b.threadPosts[b.threadPosts.length - 1].dateMs\r\n        }\r\n        if ((b.threadPosts.length == 0) && (a.threadPosts.length == 0)) {\r\n          return a.dateMs - b.dateMs;\r\n        }\r\n      }).reverse();\r\n\r\n      return {\r\n        ...state,\r\n        data: dataSorted,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Admin/modules/admin.js"],"sourceRoot":""}